{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:4000/api';\nclass CardService {\n  constructor() {\n    this.getCards = async () => {\n      const response = await axios.get(`${API_URL}/cards`);\n      return response.data;\n    };\n    this.getCardsByColumn = async columnId => {\n      const response = await axios.get(`${API_URL}/cards/column/${columnId}`);\n      return response.data;\n    };\n    this.getCard = async id => {\n      const response = await axios.get(`${API_URL}/cards/${id}`);\n      return response.data;\n    };\n    this.createCard = async cardData => {\n      const response = await axios.post(`${API_URL}/cards`, cardData);\n      return response.data;\n    };\n    this.updateCard = async (id, cardData) => {\n      const response = await axios.put(`${API_URL}/cards/${id}`, cardData);\n      return response.data;\n    };\n    this.moveCard = async (id, moveData) => {\n      const response = await axios.put(`${API_URL}/cards/${id}/move`, {\n        column_id: moveData.destinationColumnId,\n        position: moveData.position\n      });\n      return response.data;\n    };\n    this.deleteCard = async id => {\n      await axios.delete(`${API_URL}/cards/${id}`);\n    };\n  }\n}\nexport default new CardService();","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","CardService","constructor","getCards","response","get","data","getCardsByColumn","columnId","getCard","id","createCard","cardData","post","updateCard","put","moveCard","moveData","column_id","destinationColumnId","position","deleteCard","delete"],"sources":["/Users/usr0200783/atsushi/personal/github/todo-app/frontend/src/services/CardService.ts"],"sourcesContent":["import axios from 'axios';\nimport { Card } from '../types';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:4000/api';\n\ninterface CardCreate {\n  column_id: number;\n  title: string;\n  description?: string;\n}\n\ninterface CardUpdate {\n  title?: string;\n  description?: string;\n  position?: number;\n}\n\ninterface CardMove {\n  sourceColumnId: number;\n  destinationColumnId: number;\n  position: number;\n}\n\nclass CardService {\n  getCards = async (): Promise<Card[]> => {\n    const response = await axios.get(`${API_URL}/cards`);\n    return response.data;\n  };\n\n  getCardsByColumn = async (columnId: number): Promise<Card[]> => {\n    const response = await axios.get(`${API_URL}/cards/column/${columnId}`);\n    return response.data;\n  };\n\n  getCard = async (id: number): Promise<Card> => {\n    const response = await axios.get(`${API_URL}/cards/${id}`);\n    return response.data;\n  };\n\n  createCard = async (cardData: CardCreate): Promise<Card> => {\n    const response = await axios.post(`${API_URL}/cards`, cardData);\n    return response.data;\n  };\n\n  updateCard = async (id: number, cardData: CardUpdate): Promise<Card> => {\n    const response = await axios.put(`${API_URL}/cards/${id}`, cardData);\n    return response.data;\n  };\n\n  moveCard = async (id: number, moveData: CardMove): Promise<Card> => {\n    const response = await axios.put(`${API_URL}/cards/${id}/move`, {\n      column_id: moveData.destinationColumnId,\n      position: moveData.position\n    });\n    return response.data;\n  };\n\n  deleteCard = async (id: number): Promise<void> => {\n    await axios.delete(`${API_URL}/cards/${id}`);\n  };\n}\n\nexport default new CardService();"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;AAoB5E,MAAMC,WAAW,CAAC;EAAAC,YAAA;IAAA,KAChBC,QAAQ,GAAG,YAA6B;MACtC,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,GAAGR,OAAO,QAAQ,CAAC;MACpD,OAAOO,QAAQ,CAACE,IAAI;IACtB,CAAC;IAAA,KAEDC,gBAAgB,GAAG,MAAOC,QAAgB,IAAsB;MAC9D,MAAMJ,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,GAAGR,OAAO,iBAAiBW,QAAQ,EAAE,CAAC;MACvE,OAAOJ,QAAQ,CAACE,IAAI;IACtB,CAAC;IAAA,KAEDG,OAAO,GAAG,MAAOC,EAAU,IAAoB;MAC7C,MAAMN,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,GAAGR,OAAO,UAAUa,EAAE,EAAE,CAAC;MAC1D,OAAON,QAAQ,CAACE,IAAI;IACtB,CAAC;IAAA,KAEDK,UAAU,GAAG,MAAOC,QAAoB,IAAoB;MAC1D,MAAMR,QAAQ,GAAG,MAAMR,KAAK,CAACiB,IAAI,CAAC,GAAGhB,OAAO,QAAQ,EAAEe,QAAQ,CAAC;MAC/D,OAAOR,QAAQ,CAACE,IAAI;IACtB,CAAC;IAAA,KAEDQ,UAAU,GAAG,OAAOJ,EAAU,EAAEE,QAAoB,KAAoB;MACtE,MAAMR,QAAQ,GAAG,MAAMR,KAAK,CAACmB,GAAG,CAAC,GAAGlB,OAAO,UAAUa,EAAE,EAAE,EAAEE,QAAQ,CAAC;MACpE,OAAOR,QAAQ,CAACE,IAAI;IACtB,CAAC;IAAA,KAEDU,QAAQ,GAAG,OAAON,EAAU,EAAEO,QAAkB,KAAoB;MAClE,MAAMb,QAAQ,GAAG,MAAMR,KAAK,CAACmB,GAAG,CAAC,GAAGlB,OAAO,UAAUa,EAAE,OAAO,EAAE;QAC9DQ,SAAS,EAAED,QAAQ,CAACE,mBAAmB;QACvCC,QAAQ,EAAEH,QAAQ,CAACG;MACrB,CAAC,CAAC;MACF,OAAOhB,QAAQ,CAACE,IAAI;IACtB,CAAC;IAAA,KAEDe,UAAU,GAAG,MAAOX,EAAU,IAAoB;MAChD,MAAMd,KAAK,CAAC0B,MAAM,CAAC,GAAGzB,OAAO,UAAUa,EAAE,EAAE,CAAC;IAC9C,CAAC;EAAA;AACH;AAEA,eAAe,IAAIT,WAAW,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}