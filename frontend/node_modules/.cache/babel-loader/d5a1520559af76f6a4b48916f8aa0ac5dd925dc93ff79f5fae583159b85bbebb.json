{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:4000/api';\nclass BoardService {\n  constructor() {\n    this.getBoards = async () => {\n      const response = await axios.get(`${API_URL}/boards`);\n      return response.data;\n    };\n    this.getBoard = async id => {\n      const response = await axios.get(`${API_URL}/boards/${id}`);\n      return response.data;\n    };\n    this.createBoard = async name => {\n      const response = await axios.post(`${API_URL}/boards`, {\n        name\n      });\n      return response.data;\n    };\n    this.updateBoard = async (id, name) => {\n      const response = await axios.put(`${API_URL}/boards/${id}`, {\n        name\n      });\n      return response.data;\n    };\n    this.deleteBoard = async id => {\n      await axios.delete(`${API_URL}/boards/${id}`);\n    };\n  }\n}\nexport default new BoardService();","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","BoardService","constructor","getBoards","response","get","data","getBoard","id","createBoard","name","post","updateBoard","put","deleteBoard","delete"],"sources":["/Users/usr0200783/atsushi/personal/github/todo-app/frontend/src/services/BoardService.ts"],"sourcesContent":["import axios from 'axios';\nimport { Board } from '../types';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:4000/api';\n\nclass BoardService {\n  getBoards = async (): Promise<Board[]> => {\n    const response = await axios.get(`${API_URL}/boards`);\n    return response.data;\n  };\n\n  getBoard = async (id: number): Promise<Board> => {\n    const response = await axios.get(`${API_URL}/boards/${id}`);\n    return response.data;\n  };\n\n  createBoard = async (name: string): Promise<Board> => {\n    const response = await axios.post(`${API_URL}/boards`, { name });\n    return response.data;\n  };\n\n  updateBoard = async (id: number, name: string): Promise<Board> => {\n    const response = await axios.put(`${API_URL}/boards/${id}`, { name });\n    return response.data;\n  };\n\n  deleteBoard = async (id: number): Promise<void> => {\n    await axios.delete(`${API_URL}/boards/${id}`);\n  };\n}\n\nexport default new BoardService();"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;AAE5E,MAAMC,YAAY,CAAC;EAAAC,YAAA;IAAA,KACjBC,SAAS,GAAG,YAA8B;MACxC,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,GAAGR,OAAO,SAAS,CAAC;MACrD,OAAOO,QAAQ,CAACE,IAAI;IACtB,CAAC;IAAA,KAEDC,QAAQ,GAAG,MAAOC,EAAU,IAAqB;MAC/C,MAAMJ,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,GAAGR,OAAO,WAAWW,EAAE,EAAE,CAAC;MAC3D,OAAOJ,QAAQ,CAACE,IAAI;IACtB,CAAC;IAAA,KAEDG,WAAW,GAAG,MAAOC,IAAY,IAAqB;MACpD,MAAMN,QAAQ,GAAG,MAAMR,KAAK,CAACe,IAAI,CAAC,GAAGd,OAAO,SAAS,EAAE;QAAEa;MAAK,CAAC,CAAC;MAChE,OAAON,QAAQ,CAACE,IAAI;IACtB,CAAC;IAAA,KAEDM,WAAW,GAAG,OAAOJ,EAAU,EAAEE,IAAY,KAAqB;MAChE,MAAMN,QAAQ,GAAG,MAAMR,KAAK,CAACiB,GAAG,CAAC,GAAGhB,OAAO,WAAWW,EAAE,EAAE,EAAE;QAAEE;MAAK,CAAC,CAAC;MACrE,OAAON,QAAQ,CAACE,IAAI;IACtB,CAAC;IAAA,KAEDQ,WAAW,GAAG,MAAON,EAAU,IAAoB;MACjD,MAAMZ,KAAK,CAACmB,MAAM,CAAC,GAAGlB,OAAO,WAAWW,EAAE,EAAE,CAAC;IAC/C,CAAC;EAAA;AACH;AAEA,eAAe,IAAIP,YAAY,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}